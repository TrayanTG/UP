Примери:

=====Single Element=====
int *a = new(nothrow) int(7);
if(a == nullptr)
{
  cerr<<"No memory!\n";
  return 0;
}
...
delete a;
-----------------------------------------

=====Simple array=====
int n;
cin>>n;
int *a = new(nothrow) int[n];
if(a == nullptr)
{
  cerr<<"No memory!\n";
  return 0;
}
...
delete[] a;
-----------------------------------------

=====Matrix (NxM)=====
int n, m;
cin>>n>>m;
int **a = new(nothrow) int* [n];
if(a == nullptr)
{
  cerr<<"No memory!\n";
  return 0;
}
for(int i=0; i<n; i++)
{
  a[i] = new(nothrow) int[m];
  if(a[i] == nullptr)
  {
    for(int j=0; j<i; j++) delete[] a[i];
    delete[] a;
    cerr<<"No memory!\n";
    return 0;
  }
}
...
for(int i=0; i<n; i++) delete[] a[i];
delete[] a;
-----------------------------------------

=====Array of arrays=====
int n;
cin>>n;
int **a = new(nothrow) int* [n];
if(a == nullptr)
{
  cerr<<"No memory!\n";
  return 0;
}
int *p = new(nothrow) int[n]; //p[i] := count of elements of array a[i]
if(p == nullptr)
{
  delete[] a;
  cerr<<"No memory!\n";
  return 0;
}
for(int i=0; i<n; i++)
{
  cin>>p[i];
  a[i] = new(nothrow) int[p[i]];
  if(a[i] == nullptr)
  {
    for(int j=0; j<i; j++) delete[] a[i];
    delete[] p;
    delete[] a;
    cerr<<"No memory!\n";
    return 0;
  }
}
...
for(int i=0; i<n; i++) delete[] a[i];
delete[] p;
delete[] a;
-----------------------------------------

=====std::bad_alloc handling=====
int *a;
int n;
cin>>n;
try{
  a = new int[n]; //without "(nothrow)" so that new throws std::bad_alloc if no memory aviable
}catch(const std::bad_alloc& e){
  cerr << "Allocation failed: " << e.what() << endl;
  return 0;
}
//for simplicity you can say: catch(...) instead of catch(const std::bad_alloc& e)
-----------------------------------------
