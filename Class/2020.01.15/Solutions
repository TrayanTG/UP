#include<iostream>
using namespace std;

int mult2(const int x){
    return x*2;
}

int plus2(const int x){
    return x+2;
}

bool even(const int x){
    return (x%2==0);
}

int* map(int *a, const int n, int(*f)(const int)){
    int *b = new int[n];
    for(int i=0; i<n; i++){
        b[i]=f(a[i]);
    }
    return b;
}

int* filter(int *a, int& n, bool(*f)(const int)){
    int m=0;
    int *b=new int[n];
    for(int i=0; i<n; i++){
        if(f(a[i])){
            b[m]=a[i];
            m++;
        }
    }
    n=m;
    return b;
}

int sum(const int a, const int b=0){
    return a+b;
}

int mult(const int a, const int b=1){
    return a*b;
}

const int reduce(int* a, const int n, int(*f)(const int, const int),
                    const int d){
    int result=f(a[0], d);
    for(int i=1; i<n; i++){
        result=f(a[i], result);
    }
    return result;
}

int main()
{
    int n;
    cin>>n;
    int *a = new int[n];
    for(int i=0; i<n; i++)cin>>a[i];

    int *b = map(a, n, plus2);
    for(int i=0; i<n; i++)cout<<b[i]<<" ";
    cout<<endl;
    delete[] b;


    int m=n;
    int *c = filter(a, m, even);
    for(int i=0; i<m; i++)cout<<c[i]<<" ";
    cout<<endl;
    delete[] c;


    cout<<reduce(a, n, sum, 0)<<endl;
    cout<<reduce(a, n, mult, 1)<<endl;


    delete[] a;
    return 0;
}
